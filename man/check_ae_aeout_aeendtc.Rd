% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_ae_aeout_aeendtc.R
\name{check_ae_aeout_aeendtc}
\alias{check_ae_aeout_aeendtc}
\title{Check for inconsistency between AE outcome (AEOUT) and AE end date (AEENDTC)}
\usage{
check_ae_aeout_aeendtc(AE, preproc = identity, ...)
}
\arguments{
\item{AE}{Adverse Events SDTM dataset with variables USUBJID, AEENDTC, AEOUT}

\item{preproc}{An optional company specific preprocessing script}

\item{...}{Other arguments passed to methods}
}
\value{
boolean value if check failed or passed with 'msg' attribute if the
test failed
}
\description{
This check looks for AEs with a present End date(AEENDTC) but outcome
(AEOUT) is not one of the following: "FATAL", "RECOVERED/RESOLVED", "RECOVERED/RESOLVED WITH SEQUELAE"
If AE End date is missing AEENDTC missing, AEOUT should be one of "UNKNOWN", "NOT RECOVERED/NOT RESOLVED", "RECOVERING/RESOLVING"
}
\examples{

AE <- data.frame(
USUBJID = 1:9,
AEENDTC = c(NA, "NA", "2015-03-12", "2017-01-22",   "1999-11-07",        "",     NA,                   "2017-09-01",          "2015-01-01"),
AEOUT   = c("", "",   "",           "NOT RECOVERED","RECOVERED/RESOLVED","FATAL","RECOVERED/RESOLVED", "RECOVERING/RESOLVING","UNKNOWN"),
AESPID  = "FORMNAME-R:13/L:13XXXX",
stringsAsFactors = FALSE
)


check_ae_aeout_aeendtc(AE)
check_ae_aeout_aeendtc(AE,preproc=roche_derive_rave_row)

AE$AEENDTC <- NULL
check_ae_aeout_aeendtc(AE)

AE$AEOUT <- NULL
check_ae_aeout_aeendtc(AE)

}
\author{
Jennifer Lomax
}
